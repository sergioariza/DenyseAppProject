<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		actionBarVisible="false"
		initialize="initShows(event)"
		xmlns:s="library://ns.adobe.com/flex/spark"
		title="{LocalizationModel.showsLabel}">
	<fx:Declarations>
		<s:HTTPService id="service"
					   url="https://enigmatic-beyond-4135.herokuapp.com/services/denyse/videos/1/5/"
					   result="service_resultHandler(event)"
					   fault="service_faultHandler(event)"
					   resultFormat="xml"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import assets.AssetsLibrary;

			import model.LocalizationModel;
			import model.VideosModel;

			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.core.IVisualElement;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			import spark.layouts.VerticalLayout;

			import views.details.ShowsDetailsView;
			import views.renderers.manually.VideosItemRenderer_manually;

			import vo.VoVideos;

			private var pressed:Boolean = false;
			private var callingService:Boolean = false;
			private var startPointPosition:Number = 0;
			private var lastIndexInViewWhenPressed:Number = 0;

			private function initShows(event:FlexEvent):void
			{
				var file:File = File.applicationDirectory.resolvePath("assets/xml/videos.xml");
				var stream:FileStream = new FileStream();
				var xml:XML;
				stream.open(file, FileMode.READ);
				xml = XML(stream.readUTFBytes(stream.bytesAvailable));
				stream.close();
				loadModel(xml);
			}

			private function loadModel(xml:XML):void
			{
				for each (var videosItem:XML in xml.videos)
				{
					var videos:VoVideos = new VoVideos();
					videos.id = videosItem.id;
					videos.videoTitle = videosItem.videoTitle;
					videos.youtubeURL = videosItem.youtubeURL;
					VideosModel.arrShowsItems.addItem(videos);
					VideosModel.videosPublished++;
				}

				idList.dataProvider = VideosModel.arrShowsItems;
			}

			protected function idList_mouseDownHandler(event:MouseEvent):void
			{
				pressed = true;
				var vLay:VerticalLayout = idList.layout as VerticalLayout;
				lastIndexInViewWhenPressed = vLay.lastIndexInView;
				startPointPosition = this.mouseY;
			}

			protected function idList_mouseUpHandler(event:MouseEvent):void
			{
				pressed = false;

				if (callingService)
					callingService = false;
			}

			protected function idList_mouseMoveHandler(event:MouseEvent):void
			{
				if (pressed)
				{
					var menuBar:Number = event.stageY - this.mouseY;
					var firstRow:IVisualElement = idList.dataGroup.getElementAt(0);

					if (firstRow)
					{
						var rowHeight:Number = VideosItemRenderer_manually(firstRow).measuredHeight;
						var numberOfRowsInView:Number = Math.ceil((this.screen.height - menuBar) / rowHeight) - 1;
						var vLay:VerticalLayout = idList.layout as VerticalLayout;
						var appDPI:Number = FlexGlobals.topLevelApplication.applicationDPI;
						var trigger:Number = 0;
						var extraOffset:Number = 0;

						if (lastIndexInViewWhenPressed > vLay.lastIndexInView)
						{
							extraOffset = (lastIndexInViewWhenPressed - vLay.lastIndexInView) * rowHeight;
						}

						switch (appDPI)
						{
							case 160:
								trigger = 100;
								break;
							case 240:
								trigger = 175;
								break;
							case 320:
								trigger = 350;
								break;
							default:
								break;
						}

						if ((numberOfRowsInView == vLay.lastIndexInView) && (this.mouseY - startPointPosition > (trigger + extraOffset)) && !callingService)
						{
							trace("Dispara evento VÍDEOS!!!");
							callingService = true;
							service.url = "https://enigmatic-beyond-4135.herokuapp.com/services/denyse/news/" + (VideosModel.videosPublished + 1) + "/5/";
							service.send();
						}
					}
				}
			}

			protected function service_resultHandler(event:ResultEvent):void
			{
				trace("Éxito en XML Videos!!!");
				var resultString:String = String(event.result);
				loadModel(new XML(resultString));
			}

			protected function service_faultHandler(event:FaultEvent):void
			{
				trace("Fracaso en XML Videos!!!");
			}
		]]>
	</fx:Script>
	<s:BitmapImage source="{AssetsLibrary.generalBackground}"
				   left="0"
				   alpha="0.6"
				   right="0"
				   width="100%"
				   height="100%"/>
	<s:List id="idList"
			mouseDown="idList_mouseDownHandler(event)"
			mouseUp="idList_mouseUpHandler(event)"
			mouseMove="idList_mouseMoveHandler(event)"
			contentBackgroundAlpha="0.0"
			height="100%"
			width="100%"
			bottom="0"
			left="0"
			right="0"
			itemRenderer="views.renderers.manually.VideosItemRenderer_manually">
	</s:List>
</s:View>
