<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		backgroundAlpha="0.15"
		backgroundColor="0x000000"
		click="view_clickHandler(event)"
		actionBarVisible="false"
		xmlns:s="library://ns.adobe.com/flex/spark">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import assets.AssetsLibrary;

			import flash.utils.setTimeout;

			import model.NewsModel;
			import model.VideosModel;

			import mx.events.FlexEvent;

			import spark.components.Application;
			import spark.components.IconItemRenderer;
			import spark.core.ContentCache;

			import vo.VoVideos;

			private var voVideos:VoVideos = new VoVideos();

			private var photo:String;

			//Métodos relacionados con el override de set data y otros propios
			override public function set data(value:Object):void
			{
				super.data = value;

				if (data == null)
					return;

				voVideos = VoVideos(value);
				videoTitle.text = "Título: " + voVideos.videoTitle;
				checkCache();
				fillInfo();
			}

			//Caché de imágenes
			private function checkCache():void
			{
				if (data.cache)
				{
					idVideoCover.source = new Bitmap(data.cache);
				}
				else
				{
					photo = parseYoutubeURL(voVideos.youtubeURL);
					idVideoCover.source = photo;
					saveImageInCache(photo);
				}
			}

			private function parseYoutubeURL(input:String):String
			{
				var result:String = "";
				var youtubeId:String = input.substr(32);

				result = "http://img.youtube.com/vi/" + youtubeId + "/0.jpg"
				return result;
			}

			private function saveImageInCache(photoURL:String):void
			{
				var loader:Loader = new Loader();
				var request:URLRequest;
				request = new URLRequest(photoURL);
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, imageLoadComplete);
				loader.load(request);
			}

			private function imageLoadComplete(event:Event):void
			{
				if (!data.cache)
				{
					var bitmapData:BitmapData = new BitmapData(event.target.content.width, event.target.content.height, true);
					bitmapData.draw(event.target.content);
					data.cache = bitmapData;
				}
			}

			private function fillInfo():void
			{
				var youtubeId:String = voVideos.youtubeURL.substr(32);
				var loader:URLLoader = new URLLoader();
				var request:URLRequest = new URLRequest("https://gdata.youtube.com/feeds/api/videos/" + youtubeId + "?v=2&alt=json");
				loader.dataFormat = URLLoaderDataFormat.TEXT;
				loader.addEventListener(Event.COMPLETE, jsonDownloadComplete);
				loader.load(request);
			}

			private function jsonDownloadComplete(event:Event):void
			{
				var result:Object = JSON.parse(event.target.data);
				var count:Number = result.entry.yt$statistics.viewCount;
				var published:String = result.entry.published.$t.toString();
				videoCount.text = "Nº reproducciones: " + count;
				videoDate.text = "Fecha vídeo: " + published.substr(8, 2) + "-" + published.substr(5, 4) + "-" + published.substr(0, 4);
			}

			protected function view_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest(voVideos.youtubeURL));
			}

			protected function idVideoCover_completeHandler(event:Event):void
			{
				idVideoCover.width = this.screen.width * 0.25;
				idVideoCover.height = (idVideoCover.width / idVideoCover.sourceWidth) * idVideoCover.sourceHeight;
			}
		]]>
	</fx:Script>

	<s:Group width="100%">
		<s:Rect top="0"
				alpha="0.3"
				bottom="0"
				left="0"
				right="0">
			<s:stroke>
				<s:SolidColorStroke color="#484848"/>
			</s:stroke>
		</s:Rect>
		<s:HGroup width="100%"
				  gap="5"
				  paddingBottom="10"
				  paddingTop="10"
				  height="100%"
				  paddingLeft="10"
				  paddingRight="10"
				  verticalAlign="middle">
			<s:Group>
				<s:Rect alpha="0.3"
						width="{idVideoCover.width + 20}"
						height="{idVideoCover.height + 20}">
					<s:stroke>
						<s:SolidColorStroke color="#000000"
											alpha="0.3"/>
					</s:stroke>
					<s:fill>
						<s:SolidColor color="0x000000"/>
					</s:fill>
				</s:Rect>
				<s:Image id="idVideoCover"
						 cacheAsBitmap="true"
						 scaleMode="letterbox"
						 smooth="true"
						 smoothingQuality="high"
						 horizontalCenter="0"
						 verticalCenter="0"
						 complete="idVideoCover_completeHandler(event)"/>
			</s:Group>
			<s:Spacer width="10"/>
			<s:VGroup width="100%"
					  height="100%"
					  verticalAlign="middle">
				<s:Label id="videoTitle"
						 width="100%"
						 maxDisplayedLines="2"
						 styleName="descriptionStyleEmbed"/>
				<s:Label maxDisplayedLines="1"
						 id="videoCount"
						 styleName="descriptionStyleEmbed"/>
				<s:Label maxDisplayedLines="1"
						 id="videoDate"
						 styleName="descriptionStyleEmbed"/>
			</s:VGroup>
		</s:HGroup>
	</s:Group>
</s:View>
