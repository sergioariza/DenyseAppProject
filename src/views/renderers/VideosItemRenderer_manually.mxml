<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		backgroundAlpha="0"
		click="view_clickHandler(event)"
		actionBarVisible="false"
		xmlns:s="library://ns.adobe.com/flex/spark">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import assets.AssetsLibrary;

			import flash.utils.setTimeout;

			import model.NewsModel;
			import model.VideosModel;

			import mx.events.FlexEvent;

			import spark.components.IconItemRenderer;
			import spark.core.ContentCache;

			import vo.VoVideos;

			private var voVideos:VoVideos = new VoVideos();

			//Métodos relacionados con el override de set data y otros propios
			override public function set data(value:Object):void
			{
				super.data = value;

				if (data == null)
					return;

				voVideos = VoVideos(value);
				videoTitle.text = "Título: " + voVideos.videoTitle;
				idVideoCover.source = parseYoutubeURL(voVideos.youtubeURL);
				setBackgroundImage();
			}

			private function parseYoutubeURL(input:String):String
			{
				var result:String = "";
				var youtubeId:String = input.substr(32);

				result = "http://img.youtube.com/vi/" + youtubeId + "/0.jpg"
				return result;
			}

			private function setBackgroundImage():void
			{
				switch (VideosModel.index)
				{
					case 1:
						VideosModel.index = 2;
						idBackgroundContainer.source = AssetsLibrary.backgroundList1;
						break;
					case 2:
						VideosModel.index = 3;
						idBackgroundContainer.source = AssetsLibrary.backgroundList2;
						break;
					case 3:
						VideosModel.index = 4;
						idBackgroundContainer.source = AssetsLibrary.backgroundList3;
						break;
					case 4:
						VideosModel.index = 1;
						idBackgroundContainer.source = AssetsLibrary.backgroundList4;
						break;
				}
			}

			/* protected function swfLoader_creationCompleteHandler(event:FlexEvent):void
			{
				swfLoader.unloadAndStop();
				swfLoader.source = videoUrl;
			} */

			protected function view_clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest(voVideos.youtubeURL));
			}
		]]>
	</fx:Script>

	<s:Group width="100%"
			 height="150">
		<s:Rect top="0"
				alpha="0.3"
				bottom="0"
				left="0"
				right="0">
			<s:stroke>
				<s:SolidColorStroke color="#000000"/>
			</s:stroke>
		</s:Rect>
		<s:BitmapImage id="idBackgroundContainer"
					   width="100%"
					   alpha="0.3"
					   height="100%"/>
		<!--<mx:SWFLoader id="swfLoader"
					  horizontalCenter="15"
					  verticalCenter="-10"
					  creationComplete="swfLoader_creationCompleteHandler(event)"
					  height="250"
					  autoLoad="true"/>-->
		<s:HGroup width="100%"
				  height="100%"
				  paddingLeft="20"
				  paddingRight="20"
				  verticalAlign="middle">
			<s:BitmapImage id="idVideoCover"
						   width="175"
						   height="100"
						   verticalCenter="0"
						   horizontalCenter="0"/>
			<s:VGroup width="50%"
					  height="100%"
					  verticalAlign="middle">
				<s:Label fontSize="16"
						 id="videoTitle"
						 maxDisplayedLines="1"
						 styleName="customStyleSpark"/>
				<s:Label fontSize="14"
						 maxDisplayedLines="1"
						 styleName="customStyleSpark"
						 text="Nº reproducciones: 2310"/>
				<s:Label fontSize="14"
						 maxDisplayedLines="1"
						 styleName="customStyleSpark"
						 text="Fecha vídeo: DD-MM-AAAA"/>
			</s:VGroup>
		</s:HGroup>
	</s:Group>
</s:View>
