<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		backgroundAlpha="0.15"
		backgroundColor="0x000000"
		actionBarVisible="false"
		xmlns:s="library://ns.adobe.com/flex/spark">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import assets.AssetsLibrary;

			import flash.utils.setTimeout;

			import model.NewsModel;
			import model.ShowsModel;

			import mx.events.FlexEvent;

			import spark.components.Application;
			import spark.components.IconItemRenderer;
			import spark.core.ContentCache;

			import vo.VoShows;

			private var photo:String;

			private var photoWidth:Number = 0;
			private var photoHeight:Number = 0;

			//Métodos relacionados con el override de set data y otros propios
			override public function set data(value:Object):void
			{
				super.data = value;

				if (data == null)
					return;

				var voShows:VoShows = VoShows(value);
				placeLabel.text = "Lugar: " + voShows.place;
				bandsWithLabel.text = "Bandas invitadas: " + voShows.bandsWith;
				dateShowLabel.text = "Fecha y hora: " + voShows.dateShow + " " + voShows.hourShow + "h";
				photo = voShows.photoURL;
				checkCache();

				if (photoWidth != 0 && photoHeight != 0)
				{
					idPhotoLink.width = photoWidth;
					idPhotoLink.height = photoHeight;
				}
			}

			//Caché de imágenes
			private function checkCache():void
			{
				if (data.cache)
				{
					idPhotoLink.source = new Bitmap(data.cache);
				}
				else
				{
					idPhotoLink.source = photo;
					saveImageInCache(photo);
				}
			}

			private function saveImageInCache(photoURL:String):void
			{
				var loader:Loader = new Loader();
				var request:URLRequest;
				request = new URLRequest(photoURL);
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, imageLoadComplete);
				loader.load(request);
			}

			private function imageLoadComplete(event:Event):void
			{
				if (!data.cache)
				{
					var bitmapData:BitmapData = new BitmapData(event.target.content.width, event.target.content.height, true);
					bitmapData.draw(event.target.content);
					data.cache = bitmapData;
				}
			}

			protected function idPhotoLink_completeHandler(event:Event):void
			{
				idPhotoLink.width = this.screen.width * 0.75;
				idPhotoLink.height = (idPhotoLink.width / idPhotoLink.sourceWidth) * idPhotoLink.sourceHeight;
				photoWidth = idPhotoLink.width;
				photoHeight = idPhotoLink.height;
			}
		]]>
	</fx:Script>

	<s:Group width="100%">
		<s:Rect top="0"
				alpha="0.3"
				bottom="0"
				left="0"
				right="0">
			<s:stroke>
				<s:SolidColorStroke color="#484848"/>
			</s:stroke>
		</s:Rect>
		<s:VGroup horizontalAlign="center"
				  gap="5"
				  paddingTop="10"
				  paddingBottom="10"
				  paddingLeft="10"
				  paddingRight="10"
				  verticalAlign="middle"
				  width="100%">
			<s:Group>
				<s:Rect alpha="0.3"
						width="{idPhotoLink.width + 20}"
						height="{idPhotoLink.height + 20}">
					<s:stroke>
						<s:SolidColorStroke color="#000000"
											alpha="0.3"/>
					</s:stroke>
					<s:fill>
						<s:SolidColor color="0x000000"/>
					</s:fill>
				</s:Rect>
				<s:Image id="idPhotoLink"
						 cacheAsBitmap="true"
						 complete="idPhotoLink_completeHandler(event)"
						 scaleMode="letterbox"
						 horizontalCenter="0"
						 verticalCenter="0"/>
			</s:Group>
			<s:Spacer height="10"/>
			<s:VGroup gap="5"
					  paddingLeft="30"
					  horizontalAlign="left"
					  width="100%">
				<s:HGroup verticalAlign="middle"
						  width="100%">
					<s:Image smooth="true"
							 cacheAsBitmap="true"
							 smoothingQuality="high">
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="assets/icons/shows/dpi_160/place.png"
													source240dpi="assets/icons/shows/dpi_240/place.png"
													source320dpi="assets/icons/shows/dpi_320/place.png"/>
						</s:source>
					</s:Image>
					<s:Label width="100%"
							 id="placeLabel"
							 textAlign="left"
							 maxDisplayedLines="5"
							 styleName="descriptionStyleEmbed"/>
				</s:HGroup>
				<s:HGroup verticalAlign="middle"
						  width="100%">
					<s:Image smooth="true"
							 cacheAsBitmap="true"
							 smoothingQuality="high">
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="assets/icons/shows/dpi_160/clock.png"
													source240dpi="assets/icons/shows/dpi_240/clock.png"
													source320dpi="assets/icons/shows/dpi_320/clock.png"/>
						</s:source>
					</s:Image>
					<s:Label width="100%"
							 textAlign="left"
							 id="dateShowLabel"
							 maxDisplayedLines="5"
							 styleName="descriptionStyleEmbed"/>
				</s:HGroup>
				<s:HGroup width="100%"
						  verticalAlign="middle">
					<s:Image smoothingQuality="high"
							 cacheAsBitmap="true"
							 smooth="true">
						<s:source>
							<s:MultiDPIBitmapSource source160dpi="assets/icons/shows/dpi_160/bands.png"
													source240dpi="assets/icons/shows/dpi_240/bands.png"
													source320dpi="assets/icons/shows/dpi_320/bands.png"/>
						</s:source>
					</s:Image>
					<s:Label width="100%"
							 textAlign="left"
							 id="bandsWithLabel"
							 maxDisplayedLines="5"
							 styleName="descriptionStyleEmbed"/>
				</s:HGroup>
			</s:VGroup>
		</s:VGroup>
		<!--<s:Image source="{AssetsLibrary.nextIcon}"
				 top="250"
				 right="5"
				 smoothingQuality="high"
				 buttonMode="true"
				 height="50"
				 width="50"/>-->
	</s:Group>
</s:View>
